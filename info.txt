A query language for your API - GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.

GrapQL is a Query Language.
Alternative to using a REST API.
It's not just for reading data, it can also be used for writing data (mutations) and subscribing to real-time updates.
- Stateless: No session management, no cookies.
- Schema Definition Language (SDL): Describe the shape of your data in code.

Drawbacks of REST APIs
    Overfetching - Getting back more data than we need.
    Underfetching - Not getting enough data. May require meultiple requests to make.

Apollo Explorer
    - Similar to Postman
    - Allows you to interactively explore your GraphQL server and see what queries/mutations are available.
    - Provides autocomplete as you type.
    - Can test out mutation operations.

typedefs -
    In GraphQL, typeDefs is a string or a schema language document that describes the data structure of your GraphQL API. It defines the available types, their fields, and the relationships between them, including object types, scalar types, input types, interfaces, unions, and enumerations

Sample Queries
query ExampleQuery($id:ID!) {
  review(id:$id){
    rating,
    content,
    game {
      title,platform, reviews {
        content, rating
      }
    },
    author {
      name,
      verified
    }
  }
}



query ExampleQuery($id:ID!) {
  # review(id:$id){
  #   rating, content
  # }
  # game(id: $id){
  #   title,
  #   reviews {
  #     rating
  #     content
  #   }
  # }
  author(id: $id) {
    name,
    reviews {
      rating,
      content
    }
  }
}